{"version":3,"sources":["components/navbar/index.js","components/main/profile/index.js","components/main/projects/index.js","components/main/techStacks/index.js","components/main/index.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","sectionDesktop","sectionMobile","NavBar","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","aria-controls","aria-haspopup","className","AppBar","Toolbar","edge","Typography","variant","noWrap","InputBase","placeholder","root","input","inputProps","card","media","Profile","contentWidthPx","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","component","CardActions","Button","size","Projects","Paper","TechStacks","paperWidth","contentWidth","Main","style","border","App","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.20a3a189.chunk.js","sourcesContent":["import React from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\"\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: 200\n    }\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\"\n    }\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\"\n    }\n  }\n}));\n\nexport default function NavBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = event => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Material-UI\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n// import Hello from \"../../../../public/main/\"\n\nconst useStyles = makeStyles({\n  card: {\n    // maxWidth: 345\n    width: \"100%\"\n  },\n  media: {\n    height: 140\n  }\n});\n\nexport default function Profile({ contentWidthPx }) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image=\"/main/profile-pic.jpg\"\n          title=\"profile-image\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Welcome to my portfolio!\n          </Typography>\n          {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Lizards are a widespread group of squamate reptiles, with over 6,000\n            species, ranging across all continents except Antarctica\n          </Typography> */}\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  }\n}));\n\nexport default function Projects() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Paper className={classes.root}>\n        <Typography variant=\"h5\" component=\"h3\">\n          Completed projects\n        </Typography>\n        <Typography component=\"p\">\n          Paper can be used to build surface or other elements for your\n          application.\n        </Typography>\n      </Paper>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  }\n}));\n\nexport default function TechStacks() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Paper className={classes.root}>\n        <Typography variant=\"h5\" component=\"h3\">\n          TechStacks\n        </Typography>\n        <Typography component=\"p\">\n          Paper can be used to build surface or other elements for your\n          application.\n        </Typography>\n      </Paper>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Profile from \"./profile/index\";\nimport Projects from \"./projects/index\";\nimport TechStacks from \"./techStacks/index\";\nimport \"./index.css\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  }\n}));\n\nconst paperWidth = 800;\nconst contentWidth = 750;\n\nexport default function Main() {\n  const classes = useStyles();\n\n  return (\n    <div id=\"parent\">\n      <Paper\n        className={classes.root}\n        style={{ border: \"none\", width: paperWidth }}\n      >\n        {/* <Typography variant=\"h5\" component=\"h3\">\n          This is a sheet of paper.\n        </Typography>\n        <Typography component=\"p\">\n          Paper can be used to build surface or other elements for your\n          application.\n        </Typography> */}\n        <div id=\"content-centerer\">\n          <div id=\"content-wrapper-main\" style={{ width: contentWidth }}>\n            <div className=\"content-main\">\n              <Profile></Profile>\n            </div>\n            <div className=\"content-main\">\n              <Projects></Projects>\n            </div>\n            <div className=\"content-main\">\n              <TechStacks></TechStacks>\n            </div>\n          </div>\n        </div>\n      </Paper>\n    </div>\n  );\n}\n","import React from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport NavBar from \"./components/navbar/index\";\nimport Main from \"./components/main/index\";\n\nfunction App() {\n  return (\n    <>\n      <NavBar></NavBar>\n      <div id=\"content-wrapper-app\">\n        <Main></Main>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}